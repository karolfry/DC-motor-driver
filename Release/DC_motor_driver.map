Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
                              ./UART.o (__udivmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
                              ./UART.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                              ./UART.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

UART_RXTail         0x1               ./UART.o
UART_TxBuf          0x100             ./UART.o
UART_RxBuf          0x20              ./UART.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
LOAD ./ADC.o
LOAD ./UART.o
LOAD ./driver.o
LOAD ./main.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x67c
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e        0x0 ./ADC.o
 .text          0x0000005e        0x0 ./UART.o
 .text          0x0000005e        0x0 ./driver.o
 .text          0x0000005e        0x0 ./main.o
 .text          0x0000005e        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text          0x0000005e        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text          0x0000005e        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text          0x0000005e        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x0000005e                . = ALIGN (0x2)
 *(.text.*)
 .text.ADC_chanels_valid_check
                0x0000005e       0x28 ./ADC.o
                0x0000005e                ADC_chanels_valid_check
 .text.USART_Init
                0x00000086       0x10 ./UART.o
                0x00000086                USART_Init
 .text.uart_getc
                0x00000096       0x22 ./UART.o
                0x00000096                uart_getc
 .text.uart_putc
                0x000000b8       0x22 ./UART.o
                0x000000b8                uart_putc
 .text.uart_putstr
                0x000000da       0x24 ./UART.o
                0x000000da                uart_putstr
 .text.uart_putnline
                0x000000fe        0x8 ./UART.o
                0x000000fe                uart_putnline
 .text.uart_putInt
                0x00000106       0xb4 ./UART.o
                0x00000106                uart_putInt
 .text.UDRE_interrupt
                0x000001ba       0x22 ./UART.o
                0x000001ba                UDRE_interrupt
 .text.uart_CleanScr
                0x000001dc       0x1c ./UART.o
                0x000001dc                uart_CleanScr
 .text.uart_SetCursor
                0x000001f8       0x36 ./UART.o
                0x000001f8                uart_SetCursor
 .text.uart_CursorOff
                0x0000022e       0x18 ./UART.o
                0x0000022e                uart_CursorOff
 .text.uart_ScrDisplay
                0x00000246       0x84 ./UART.o
                0x00000246                uart_ScrDisplay
 .text.DIR_forward
                0x000002ca        0x6 ./driver.o
                0x000002ca                DIR_forward
 .text.DIR_backward
                0x000002d0        0x6 ./driver.o
                0x000002d0                DIR_backward
 .text.DIR_neutral
                0x000002d6        0x6 ./driver.o
                0x000002d6                DIR_neutral
 .text.startup.main
                0x000002dc      0x182 ./main.o
                0x000002dc                main
 .text.__vector_11
                0x0000045e       0x24 ./main.o
                0x0000045e                __vector_11
 .text.__vector_12
                0x00000482       0x46 ./main.o
                0x00000482                __vector_12
 .text.__vector_14
                0x000004c8       0x60 ./main.o
                0x000004c8                __vector_14
 .text.__vector_9
                0x00000528      0x128 ./main.o
                0x00000528                __vector_9
 .text.libgcc.mul
                0x00000650        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000650       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
                0x00000650                __udivmodhi4
 .text.libgcc   0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
                0x00000678                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000678        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
                0x00000678                _exit
                0x00000678                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000678        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x0000067c                _etext = .

.data           0x00800060       0x58 load address 0x0000067c
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 ./ADC.o
 .data          0x00800060        0x0 ./UART.o
 .data          0x00800060        0x0 ./driver.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.ADC_value
                0x00800060        0x1 ./main.o
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800061       0x56 ./UART.o
 *(.gnu.linkonce.d*)
                0x008000b8                . = ALIGN (0x2)
 *fill*         0x008000b7        0x1 
                0x008000b8                _edata = .
                0x008000b8                PROVIDE (__data_end, .)

.bss            0x008000b8      0x132
                0x008000b8                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000b8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x008000b8        0x0 ./ADC.o
 .bss           0x008000b8        0x0 ./UART.o
 .bss           0x008000b8        0x0 ./driver.o
 .bss           0x008000b8        0x0 ./main.o
 .bss           0x008000b8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_udivmodhi4.o)
 .bss           0x008000b8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_exit.o)
 .bss           0x008000b8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_copy_data.o)
 .bss           0x008000b8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.UART_RxHead
                0x008000b8        0x1 ./UART.o
                0x008000b8                UART_RxHead
 .bss.UART_TxTail
                0x008000b9        0x1 ./UART.o
                0x008000b9                UART_TxTail
 .bss.UART_TxHead
                0x008000ba        0x1 ./UART.o
                0x008000ba                UART_TxHead
 .bss.work_flag
                0x008000bb        0x1 ./main.o
                0x008000bb                work_flag
 .bss.ADC_mesure_cmp_flag
                0x008000bc        0x1 ./main.o
                0x008000bc                ADC_mesure_cmp_flag
 .bss.UART_em_stop
                0x008000bd        0x1 ./main.o
                0x008000bd                UART_em_stop
 .bss.ADC_Dir   0x008000be        0x1 ./main.o
                0x008000be                ADC_Dir
 .bss.ADC_valid_flag
                0x008000bf        0x1 ./main.o
                0x008000bf                ADC_valid_flag
 .bss.ADC_mesure_ch3
                0x008000c0        0x1 ./main.o
                0x008000c0                ADC_mesure_ch3
 .bss.ADC_mesure_ch2
                0x008000c1        0x1 ./main.o
                0x008000c1                ADC_mesure_ch2
 .bss.ADC_mesure_ch1
                0x008000c2        0x1 ./main.o
                0x008000c2                ADC_mesure_ch1
 .bss.pomiar    0x008000c3        0x1 ./main.o
                0x008000c3                pomiar
 .bss.sel_channel.1539
                0x008000c4        0x1 ./main.o
 .bss.ADC_err_count.1546
                0x008000c5        0x1 ./main.o
 .bss.PWR_zero_detect_flag.1549
                0x008000c6        0x2 ./main.o
 .bss.Zero_cross_delay.1550
                0x008000c8        0x1 ./main.o
 *(COMMON)
 COMMON         0x008000c9      0x121 ./UART.o
                0x008000c9                UART_RXTail
                0x008000ca                UART_TxBuf
                0x008001ca                UART_RxBuf
                0x008001ea                PROVIDE (__bss_end, .)
                0x0000067c                __data_load_start = LOADADDR (.data)
                0x000006d4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001ea        0x0
                0x008001ea                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001ea                PROVIDE (__noinit_end, .)
                0x008001ea                _end = .
                0x008001ea                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./ADC.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./UART.o
 .comment       0x00000000       0x30 ./driver.o
 .comment       0x00000000       0x30 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(DC_motor_driver.elf elf32-avr)
LOAD linker stubs
